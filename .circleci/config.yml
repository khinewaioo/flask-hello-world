version: 2.1

orbs:
  # The python orb contains a set of prepackaged CircleCI configuration you can use repeatedly in your configuration files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@1.2

workflows:
  sample: 
    jobs:
      - deploy-infrastructure
jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Run tests
          command: pytest
  deploy-infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Ensure back-end infrastructure exists
          command: |
            aws cloudformation deploy \
              --template-file .circleci/server.yml \
              --tags project="udapeople" \
              --stack-name "backend" \
      #         BACKEND_IP=$(aws ec2 describe-instances \
      #         --query 'Reservations[*].Instances[*].PublicIpAddress' \
      #         --filters "Name=tag:Name,Values=backend-${CIRCLE_WORKFLOW_ID}" \
      #         --output text)
      #       curl -H "Content-Type: text/plain" -H "token: 63bb891f-21b3-4e53-a949-c1fc57b43346" --request PUT \
      #       --data "$BACKEND_IP" https://api.memstash.io/values/BACKEND_IP
      # - run:
      #     name: Install dependencies
      #     command: |
      #       python3 -m venv venv
      #       . venv/bin/activate
      #       cd flask-hello-world
      #       pip install -r requirements.txt

            

