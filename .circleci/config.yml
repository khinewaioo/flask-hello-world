version: 2.1

orbs:
  # The python orb contains a set of prepackaged CircleCI configuration you can use repeatedly in your configuration files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@1.2

workflows:
  sample: 
    jobs:
      - deploy-infrastructure
      - run-application:
          requires: [deploy-infrastructure]
jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Run tests
          command: pytest
          
  deploy-infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Ensure back-end infrastructure exists
          command: |
            aws cloudformation deploy \
              --template-file .circleci/server.yml \
              --tags project="udapeople" \
              --stack-name "backend" 

  
  run-application:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["7b:2a:32:f4:6b:dd:d5:b9:4f:75:f8:45:72:06:69:4e"]
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible curl
      - run:
          name: Add  to ansible inventory
          command: |
            cd .circleci/ansible/

      - run:
          name: Configure server
          command: |
            cd .circleci/ansible/
            ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -vvv deploy.yml -i .hosts

            

